/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package it.eg.cookbook.controller;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import it.eg.cookbook.model.Token;
import it.eg.cookbook.model.User;
import jakarta.validation.Valid;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Validated
@Tag(name = "Security", description = "Rest API - Security")
public interface SecurityApi {

    /**
     * POST /security/generate-token : Genera un JWT
     *
     * @param user  (required)
     * @return Ok (status code 200)
     */
    @Operation(
        operationId = "postGenerateToken",
        summary = "Genera un JWT",
        tags = { "Security" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Ok", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Token.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/security/generate-token",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    ResponseEntity<Token> postGenerateToken(
        @Parameter(name = "User", description = "", required = true) @Valid @RequestBody User user
    );

}
